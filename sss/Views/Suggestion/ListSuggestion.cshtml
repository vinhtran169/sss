@model X.PagedList.IPagedList<Suggestion>
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@{
    ViewData["Title"] = "List Suggestion";
    Layout = "_Layout";
}

<h2>List Suggest</h2>

<p>
    <a asp-action="CreateSuggestion">Create a suggestion</a>
</p>

@using (Html.BeginForm("ListSuggestion", "Suggestion", FormMethod.Get))
{
    <p>
        Find: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search">
    </p>
}

<table class="table table-striped">
    <thead>
    <tr>
        <th>@Html.ActionLink("Title", "ListSuggestion", new {sortOrder = ViewBag.TitleSort, currentFilter = ViewBag.CurrentFilter})</th>
        <th>@Html.ActionLink("Description", "ListSuggestion", new {currentFilter = ViewBag.CurrentFilter})</th>
        <th>@Html.ActionLink("Creator", "ListSuggestion", new {sortOrder = ViewBag.CreatorSort, currentFilter = ViewBag.CurrentFilter})</th>
        <th>@Html.ActionLink("Implement Date", "ListSuggestion", new {sortOrder = ViewBag.ImplementSort})</th>
        <th>@Html.ActionLink("Created Date", "ListSuggestion", new {sortOrder = ViewBag.CreatedSort})</th>
        <th>@Html.ActionLink("Updated Date", "ListSuggestion", new {sortOrder = ViewBag.UpdatedSort})</th>
        <th/>
        <th/>
        <th/>
    </tr>
    </thead>
    <tbody>
    @foreach (Suggestion s in Model)
    {
        <tr>
            <td>@s.Title</td>
            <td>@s.Description</td>
            <td>@s.Creator</td>
            <td>@s.ImplementDate</td>
            <td>@s.CreatedDate</td>
            <td>@s.UpdatedDate</td>
            <td><a asp-action="EditSuggestion" asp-route-id="@s.Id">Edit</a></td>
            <td><a asp-action="DetailsSuggestion" asp-route-id="@s.Id">Details</a></td>
            <td><a asp-action="DeleteSuggestion" asp-route-id="@s.Id">Delete</a></td>
        </tr>
    }
    </tbody>
</table>

<br/>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ListSuggestion", 
    new {page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}), 
    new PagedListRenderOptions {LiElementClasses = new string[] {"page-item"}, PageClasses = new string[] {"page-link"}})